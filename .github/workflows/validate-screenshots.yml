name: Start Emulator & Install App APK

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  install-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      APP_APK: app/build/outputs/apk/debug/app-debug.apk  # adjust if your module/name differs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build app APK (only app)
        run: ./gradlew assembleDebug --no-daemon --no-parallel

      - name: Start minimal emulator & install app APK
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 12
        with:
          api-level: 28
          target: google_apis
          arch: x86
          profile: "Nexus 5"
          force-avd-creation: true
          emulator-options: >-
            -no-window
            -no-boot-anim
            -gpu swiftshader_indirect
            -no-snapshot
            -no-audio
            -wipe-data
            -memory 1536
          script: |
            bash -euo pipefail <<'BASH'
            #!/usr/bin/env bash
            set -euo pipefail

            echo "::group::ADB initial state"
            adb version || true
            adb kill-server || true
            adb start-server || true
            adb devices -l || true
            echo "::endgroup::"

            # Wait for emulator to appear and be ONLINE
            MAX_WAIT=300
            INTERVAL=4
            elapsed=0
            device_id=""
            while [ $elapsed -lt $MAX_WAIT ]; do
              # refresh adb occasionally to avoid races
              if [ $((elapsed % 30)) -eq 0 ]; then
                adb kill-server || true
                sleep 1
                adb start-server || true
              fi

              devline=$(adb devices -l | grep -E '^emulator-[0-9]+' || true)
              if [ -n "$devline" ]; then
                device_id=$(echo "$devline" | awk '{print $1}')
                state=$(echo "$devline" | awk '{print $2}')
                echo "Found device: $device_id state=$state"
                if [ "$state" = "device" ]; then
                  echo "Device is ONLINE"
                  break
                fi
                if [ "$state" = "offline" ]; then
                  echo "Device offline â€” restarting adb and retrying"
                  adb kill-server || true
                  sleep 1
                  adb start-server || true
                fi
              else
                echo "No emulator device yet..."
              fi

              sleep $INTERVAL
              elapsed=$((elapsed + INTERVAL))
            done

            if [ -z "$device_id" ]; then
              echo "ERROR: emulator device did not appear within ${MAX_WAIT}s"
              adb devices -l || true
              adb logcat -d | tail -n 200 || true
              exit 1
            fi

            # Wait for boot completion (short)
            BOOT_MAX=180
            boot_elapsed=0
            while [ $boot_elapsed -lt $BOOT_MAX ]; do
              boot=$(adb -s "$device_id" shell getprop sys.boot_completed 2>/dev/null | tr -d '\r' || true)
              if [ "$boot" = "1" ]; then
                echo "Boot completed."
                break
              fi
              echo "Waiting for sys.boot_completed... ($boot_elapsed/$BOOT_MAX)"
              sleep 3
              boot_elapsed=$((boot_elapsed + 3))
            done

            if [ "$boot" != "1" ]; then
              echo "ERROR: boot not completed within ${BOOT_MAX}s"
              adb devices -l || true
              adb logcat -d | tail -n 200 || true
              exit 1
            fi

            echo "::group::Install APK"
            if [ ! -f "${APP_APK}" ]; then
              echo "APK not found at ${APP_APK}"
              ls -R app/build/outputs/apk || true
              exit 1
            fi

            adb -s "$device_id" wait-for-device
            adb -s "$device_id" install -r "${APP_APK}"
            echo "APK installed: ${APP_APK}"
            echo "::endgroup::"

            BASH

      - name: Short device log (always)
        if: always()
        run: |
          echo "=== last 200 lines of device log ==="
          adb logcat -d | tail -n 200 || true
