name: Install APK on Emulator (fixed sdkmanager)

on:
  workflow_dispatch: {}
  push:
    branches: ["**"]

jobs:
  install-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      APP_APK: app/build/outputs/apk/debug/app-debug.apk
      APP_MODULE: app
      AVD_PROFILE: "Nexus 5"
      API_LEVEL: 28
      ARCH: x86

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle*','**/gradle/*.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Android SDK & system image (no manual sdkmanager)
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.API_LEVEL }}
          target: google_apis
          arch: ${{ env.ARCH }}
          ndk: false

      - name: Build app APK
        run: ./gradlew :${{ env.APP_MODULE }}:assembleDebug --no-daemon --no-parallel
        shell: bash

      - name: Start emulator & install APK
        uses: reactivecircus/android-emulator-runner@v2
        timeout-minutes: 15
        with:
          api-level: ${{ env.API_LEVEL }}
          target: google_apis
          arch: ${{ env.ARCH }}
          profile: ${{ env.AVD_PROFILE }}
          force-avd-creation: true
          emulator-options: >-
            -no-window
            -no-boot-anim
            -gpu swiftshader_indirect
            -no-snapshot
            -no-audio
            -wipe-data
            -memory 1536
          script: |
            # run under bash heredoc to keep pipefail safe inside action
            bash -euo pipefail <<'BASH'
            set -euo pipefail

            ADB=adb
            APP_APK_PATH=${APP_APK}

            echo "Wait for device (max 600s)..."
            MAX_WAIT=600
            INTERVAL=4
            elapsed=0
            device=""
            while [ $elapsed -lt $MAX_WAIT ]; do
              devline=$($ADB devices -l | grep -E '^emulator-[0-9]+' || true)
              if [ -n "$devline" ]; then
                device=$(echo "$devline" | awk '{print $1}')
                state=$(echo "$devline" | awk '{print $2}')
                echo "Found device: $device state=$state"
                if [ "$state" = "device" ]; then
                  break
                fi
                if [ "$state" = "offline" ]; then
                  echo "Device offline â€” restarting adb"
                  $ADB kill-server || true
                  sleep 1
                  $ADB start-server || true
                fi
              else
                echo "No emulator device yet..."
              fi
              sleep $INTERVAL
              elapsed=$((elapsed + INTERVAL))
            done

            if [ -z "$device" ]; then
              echo "ERROR: emulator did not appear in ${MAX_WAIT}s"
              $ADB devices -l || true
              exit 1
            fi

            echo "Waiting for sys.boot_completed (max 360s)..."
            BOOT_MAX=360
            boot_elapsed=0
            while [ $boot_elapsed -lt $BOOT_MAX ]; do
              boot=$($ADB -s "$device" shell getprop sys.boot_completed 2>/dev/null | tr -d '\r' || true)
              if [ "$boot" = "1" ]; then
                echo "Boot completed."
                break
              fi
              sleep 3
              boot_elapsed=$((boot_elapsed + 3))
            done

            if [ "$boot" != "1" ]; then
              echo "ERROR: boot did not complete in ${BOOT_MAX}s"
              $ADB devices -l || true
              $ADB -s "$device" logcat -d | tail -n 200 || true
              exit 1
            fi

            echo "Preparing device and installing APK..."
            $ADB -s "$device" wait-for-device
            $ADB -s "$device" shell input keyevent 82 || true
            $ADB -s "$device" shell settings put global window_animation_scale 0 || true
            $ADB -s "$device" shell settings put global transition_animation_scale 0 || true
            $ADB -s "$device" shell settings put global animator_duration_scale 0 || true

            if [ ! -f "$APP_APK_PATH" ]; then
              echo "APK not found at $APP_APK_PATH"
              ls -R ${APP_MODULE}/build/outputs/apk || true
              exit 1
            fi

            echo "Installing $APP_APK_PATH"
            $ADB -s "$device" ins
