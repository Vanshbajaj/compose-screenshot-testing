name: Validate Compose Screenshots

on:
  pull_request:
  push:
    branches:
      - "**"

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: '17'
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/gradle.lockfile', '**/gradle/libs.versions.toml', '**/gradle.properties') }}
          restore-keys: |
            gradle-cache-${{ runner.os }}-

      - name: Install Android SDK components (emulator)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: default
          arch: x86_64
          emulator-options: "-no-window"
          emulator-boot-timeout: 600

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Wait for emulator to be ready
        run: |
          set -euxo pipefail
          ADB="$ANDROID_HOME/platform-tools/adb"
          for i in {1..120}; do
            $ADB devices | grep emulator- && break || sleep 1
          done
          for i in {1..600}; do
            BOOT=$($ADB -s emulator-5554 shell getprop sys.boot_completed 2>/dev/null || echo "")
            if [ "$BOOT" = "1" ]; then
              echo "Boot completed"
              break
            fi
            echo "still booting ($i)..."
            sleep 2
          done

      - name: Run screenshot validation
        run: ./gradlew --no-daemon --console=plain validateDebugScreenshotTest
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_HOME }}
